{
  "name": "todo-notes",
  "displayName": "Todo Notes",
  "description": "Copy the contents of the completed Todo task in Markdown to another file.",
  "version": "0.1.0",
  "engines": {
    "vscode": "^1.71.0"
  },
  "categories": [
    "Other"
  ],
  "publisher": "ame-neko",
  "repository": {
    "type": "git",
    "url": "https://github.com/ame-neko/todo-notes.git"
  },
  "icon": "images/icon.png",
  "keywords": [
    "notes",
    "todo",
    "copy",
    "tag",
    "markdown"
  ],
  "license": "MIT",
  "activationEvents": [
    "onLanguage:markdown"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "todo-notes.addTodo",
        "title": "Add Todo"
      },
      {
        "command": "todo-notes.addSimpleTodo",
        "title": "Add Todo Without Metadata"
      },
      {
        "command": "todo-notes.completeTodo",
        "title": "Complete Todo"
      },
      {
        "command": "todo-notes.completeAndCopyTodo",
        "title": "Complete Todo and Copy to Notes"
      },
      {
        "command": "todo-notes.completeAndDiscardTodo",
        "title": "Complete Todo and Discard Contents"
      },
      {
        "command": "todoNotesTags.refreshEntry",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "todoNotesTags.renameTag",
        "title": "Rename this Tag"
      },
      {
        "command": "todoNotesTags.createVirtualDocument",
        "title": "See all documents in this tag",
        "icon": "$(eye)"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "resourceLangId == markdown",
          "command": "todo-notes.addTodo",
          "group": "1_modification"
        },
        {
          "when": "resourceLangId == markdown",
          "command": "todo-notes.addSimpleTodo",
          "group": "1_modification"
        },
        {
          "when": "resourceLangId == markdown",
          "command": "todo-notes.completeAndCopyTodo",
          "group": "1_modification"
        },
        {
          "when": "resourceLangId == markdown",
          "command": "todo-notes.completeAndDiscardTodo",
          "group": "1_modification"
        },
        {
          "when": "resourceLangId == markdown",
          "command": "todo-notes.completeTodo",
          "group": "1_modification"
        }
      ],
      "view/title": [
        {
          "command": "todoNotesTags.refreshEntry",
          "when": "view == todoNotesTags",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "todoNotesTags.createVirtualDocument",
          "when": "view == todoNotesTags && viewItem == tag",
          "group": "inline",
          "args": "test"
        },
        {
          "command": "todoNotesTags.renameTag",
          "when": "view == todoNotesTags && viewItem == tag"
        }
      ]
    },
    "keybindings": [
      {
        "command": "todo-notes.addTodo",
        "key": "ctrl+k",
        "mac": "cmd+k",
        "when": "resourceLangId == markdown && editorTextFocus"
      },
      {
        "command": "todo-notes.addSimpleTodo",
        "key": "ctrl+alt+k",
        "mac": "cmd+alt+k",
        "when": "resourceLangId == markdown && editorTextFocus"
      },
      {
        "command": "todo-notes.completeAndCopyTodo",
        "key": "ctrl+d",
        "mac": "cmd+d",
        "when": "resourceLangId == markdown && editorTextFocus"
      },
      {
        "command": "todo-notes.completeAndDiscardTodo",
        "key": "ctrl+alt+e",
        "mac": "cmd+alt+e",
        "when": "resourceLangId == markdown && editorTextFocus"
      },
      {
        "command": "todo-notes.completeTodo",
        "key": "ctrl+alt+j",
        "mac": "cmd+alt+j",
        "when": "resourceLangId == markdown && editorTextFocus"
      }
    ],
    "configuration": {
      "title": "todo-notes",
      "properties": {
        "todoNotes.saveNotesPath": {
          "type": "string",
          "default": "notes",
          "description": "Path to directory where notes will be saved."
        },
        "todoNotes.dateFormat": {
          "type": "string",
          "default": "yyyy-mm-dd'T'HH:MM:sso",
          "description": "Date format used in metaata. For example: yyyy-mm-dd'T'HH:MM:sso"
        },
        "todoNotes.addCompletionDate": {
          "title": "Add completedDate to notes",
          "type": "boolean",
          "default": true,
          "description": "Add completion date to the yaml front matter of copied notes."
        },
        "todoNotes.todoRangeDetectionMode": {
          "type": "string",
          "default": "strict",
          "enum": [
            "strict",
            "next-todo"
          ],
          "description": [
            "Detect todo range strictly following GFM markdwon syntax.",
            "Todo range continues until next same or higher indent level todo."
          ]
        },
        "todoNotes.eol": {
          "title": "End of Line character",
          "type": "string",
          "default": "Operating System Default",
          "enum": [
            "Operating System Default",
            "LF",
            "CRLF"
          ],
          "description": [
            "Use Operating System default end of line character when copying todo contents to note.",
            "Use LF as end of line character when copying todo contents to note.",
            "Use CRLF as end of line character when copying todo contents to note."
          ]
        },
        "todoNotes.appendMode": {
          "title": "Append Mode",
          "type": "string",
          "default": "Overwrite",
          "enum": [
            "Overwrite",
            "Append",
            "Increment"
          ],
          "description": [
            "Oveerwrite the note file if already exist.",
            "Append the todo content to the note file if already exist.",
            "Change note file name if destination note file already exist. For example: FILENAME-1.md, FILENAME-2.md ..."
          ]
        },
        "todoNotes.showDialogueWhenFileExist": {
          "title": "Show dialogue when note file already exist",
          "type": "boolean",
          "default": true,
          "description": "Check if note file already exist or not before copying todo contents. If true and the file exists, a confirmation dialog will be displayed. Effective only when append mode is \"Overwrite\""
        },
        "todoNotes.colorizeTagIcon": {
          "title": "Colorize tag icon in tree view",
          "type": "boolean",
          "default": true,
          "description": "Colorize tag icon in tags tree view. The color is automatically determined from the hashcode of tag name."
        },
        "todoNotes.inheritParentTodoMetadata": {
          "title": "Inherit metadata of parent todo",
          "type": "boolean",
          "default": true,
          "description": "Inherit the metadatas such as tags and folderPath from parent todo Task."
        }
      }
    },
    "views": {
      "explorer": [
        {
          "id": "todoNotesTags",
          "name": "Notes Tags"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/dateformat": "^5.0.0",
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.71.0",
    "@typescript-eslint/eslint-plugin": "^5.39.0",
    "@typescript-eslint/parser": "^5.39.0",
    "@vscode/test-electron": "^2.1.5",
    "eslint": "^8.20.0",
    "glob": "^8.0.3",
    "mocha": "^10.0.0",
    "typescript": "^4.7.4"
  },
  "dependencies": {
    "vscode-languageserver": "^7.0.0",
    "vscode-languageserver-textdocument": "^1.0.4",
    "vscode-languageclient": "^7.0.0",
    "dateformat": "4.6.3",
    "front-matter": "^4.0.2",
    "remark-gfm": "1.0.0",
    "remark-parse": "9.0.0",
    "sanitize-filename": "^1.6.3",
    "unified": "9.2.2",
    "yaml": "^2.1.3"
  }
}
