{
  "name": "todo-notes",
  "displayName": "Todo Notes",
  "description": "",
  "version": "0.0.2",
  "engines": {
    "vscode": "^1.71.0"
  },
  "categories": [
    "Other"
  ],
  "publisher": "ame-neko",
  "repository": {
    "type": "git",
    "url": "https://github.com/ame-neko/todo-notes.git"
  },
  "icon": "images/icon.png",
  "discriptions": "Copy the contents of the Todo task in Markdown to another file.",
  "keywords": [
    "notes",
    "todo",
    "copy",
    "tag",
    "markdown"
  ],
  "license": "MIT",
  "activationEvents": [
    "onLanguage:markdown"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "todo-notes.addTodo",
        "title": "Add Todo"
      },
      {
        "command": "todo-notes.completeAndCopyTodo",
        "title": "Complete Todo and Copy to Notes"
      },
      {
        "command": "todo-notes.completeAndDiscardTodo",
        "title": "Complete Todo and Discard contents"
      },
      {
        "command": "todo-notes.justCompleteTodo",
        "title": "Just Complete Todo"
      },
      {
        "command": "todoNotesTags.refreshEntry",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "todoNotesTags.createVirtualDocument",
        "title": "See all documents in this tag",
        "icon": "$(eye)"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "resourceLangId == markdown",
          "command": "todo-notes.addTodo",
          "group": "1_modification"
        },
        {
          "when": "resourceLangId == markdown",
          "command": "todo-notes.completeAndCopyTodo",
          "group": "1_modification"
        },
        {
          "when": "resourceLangId == markdown",
          "command": "todo-notes.completeAndDiscardTodo",
          "group": "1_modification"
        },
        {
          "when": "resourceLangId == markdown",
          "command": "todo-notes.justCompleteTodo",
          "group": "1_modification"
        }
      ],
      "view/title": [
        {
          "command": "todoNotesTags.refreshEntry",
          "when": "view == todoNotesTags",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "todoNotesTags.createVirtualDocument",
          "when": "view == todoNotesTags && viewItem == tag",
          "group": "inline",
          "args": "test"
        }
      ]
    },
    "keybindings": [
      {
        "command": "todo-notes.addTodo",
        "key": "ctrl+k",
        "mac": "cmd+k",
        "when": "resourceLangId == markdown && editorTextFocus"
      },
      {
        "command": "todo-notes.completeAndCopyTodo",
        "key": "ctrl+d",
        "mac": "cmd+d",
        "when": "resourceLangId == markdown && editorTextFocus"
      },
      {
        "command": "todo-notes.completeAndDiscardTodo",
        "key": "ctrl+alt+e",
        "mac": "cmd+alt+e",
        "when": "resourceLangId == markdown && editorTextFocus"
      },
      {
        "command": "todo-notes.justCompleteTodo",
        "key": "ctrl+alt+j",
        "mac": "cmd+alt+j",
        "when": "resourceLangId == markdown && editorTextFocus"
      }
    ],
    "configuration": {
      "title": "todo-notes",
      "properties": {
        "todoNotes.saveNotesPath": {
          "type": "string",
          "description": "Path to directory where notes will be saved."
        },
        "todoNotes.dateFormat": {
          "type": "string",
          "description": "Date format used in metaata. For example: yyyy-mm-dd'T'HH:MM:sso"
        },
        "todoNotes.addCompletionDate": {
          "title": "Add completedDate to notes",
          "type": "boolean",
          "default": true,
          "description": "Add completion date to the yaml front matter of copied notes."
        },
        "todoNotes.todoRangeDetectionMode": {
          "type": "string",
          "default": "strict",
          "enum": [
            "strict",
            "next-todo"
          ],
          "description": [
            "Detect todo range strictly following GFM markdwon syntax.",
            "Todo range continues until next same or higher indent level todo."
          ]
        },
        "todoNotes.eol": {
          "title": "End of Line character",
          "type": "string",
          "default": "Operating System Default",
          "enum": [
            "Operating System Default",
            "LF",
            "CRLF"
          ],
          "description": [
            "Use Operating System default end of line character when copying todo contents to note.",
            "Use LF as end of line character when copying todo contents to note.",
            "Use CRLF as end of line character when copying todo contents to note."
          ]
        },
        "todoNotes.appendMode": {
          "title": "Append Mode",
          "type": "string",
          "default": "Overwrite",
          "enum": [
            "Overwrite",
            "Append",
            "Increment"
          ],
          "description": [
            "Oveerwrite the note file if already exist.",
            "Append the todo content to the note file if already exist.",
            "Change note file name if destination note file already exist. For example: FILENAME-1.md, FILENAME-2.md ..."
          ]
        },
        "todoNotes.showDialogueWhenFileExist": {
          "title": "Show dialogue when note file already exist",
          "type": "boolean",
          "default": true,
          "description": "Check if note file already exist or not before copying todo contents. If true and the file exists, a confirmation dialog will be displayed. Effective only when append mode is \"Overwrite\""
        }
      }
    },
    "views": {
      "explorer": [
        {
          "id": "todoNotesTags",
          "name": "Notes Tags"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/dateformat": "^5.0.0",
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.71.0",
    "@typescript-eslint/eslint-plugin": "^5.39.0",
    "@typescript-eslint/parser": "^5.39.0",
    "@vscode/test-electron": "^2.1.5",
    "eslint": "^8.20.0",
    "glob": "^8.0.3",
    "mocha": "^10.0.0",
    "typescript": "^4.7.4"
  },
  "dependencies": {
    "dateformat": "4.6.3",
    "front-matter": "^4.0.2",
    "remark-gfm": "1.0.0",
    "remark-parse": "9.0.0",
    "sanitize-filename": "^1.6.3",
    "unified": "9.2.2",
    "yaml": "^2.1.3"
  }
}